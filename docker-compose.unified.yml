version: '3.8'

services:
  trading-system:
    env_file: ./.env
    build:
      context: .
      dockerfile: Dockerfile.unified
    image: trading-system-unified:latest
    container_name: trading-system
    restart: unless-stopped
    ipc: host
    volumes:
      - .:/app/project
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./prometheus:/etc/prometheus
      - ./redis/redis.conf:/etc/redis/redis.conf
      - prometheus-data:/prometheus
      - redis-data:/data
    ports:
      - "8888:8888"  # Jupyter Lab
      - "6380:6380"  # Redis
      - "9090:9090"  # Prometheus
      - "9121:9121"  # Redis Exporter
      - "8000:8000"  # API server (if needed)
    environment:
      - PYTHONPATH=/app/project
      # API Keys
      - POLYGON_API_KEY=${POLYGON_API_KEY}
      - UNUSUAL_WHALES_API_KEY=${UNUSUAL_WHALES_API_KEY}
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_API_SECRET=${ALPACA_API_SECRET}
      - ALPACA_API_URL=${ALPACA_API_URL}
      # Slack Integration
      - SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}
      - SLACK_WEBHOOK_NOTIFICATIONS=${SLACK_WEBHOOK_NOTIFICATIONS}
      - SLACK_WEBHOOK_REPORTS=${SLACK_WEBHOOK_REPORTS}
      - SLACK_WEBHOOK_PORTFOLIO=${SLACK_WEBHOOK_PORTFOLIO}
      - SLACK_WEBHOOK_POSITIONS=${SLACK_WEBHOOK_POSITIONS}
      # Redis configuration
      - REDIS_HOST=localhost
      - REDIS_PORT=6380
      - REDIS_DB=0
      - REDIS_PASSWORD=trading_system_2025
      - REDIS_TTL=3600
      - REDIS_USERNAME=default
      - REDIS_SSL=false
      - REDIS_TIMEOUT=5
      - LOG_LEVEL=INFO
      # GPU acceleration
      - USE_GPU=true
      - NVIDIA_VISIBLE_DEVICES=all
      # System path configuration
      - DATA_DIR=/app/data
      - MODELS_DIR=/app/models
      - LOGS_DIR=/app/logs
      - CONFIG_DIR=/app/config
      # Connection pool configuration
      - MAX_CONNECTIONS=50
      - MAX_POOL_SIZE=20
      - CONNECTION_TIMEOUT=10
      - MAX_RETRIES=3
      - RETRY_BACKOFF_FACTOR=0.5
      # Parallel processing configuration
      - MAX_WORKERS=10
      - BATCH_SIZE=256
      - QUEUE_SIZE=100
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, utility, compute]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    ulimits:
      memlock: -1
      stack: 67108864
    stop_grace_period: 120s
    stop_signal: SIGTERM
    command: ["/app/startup.sh"]

volumes:
  prometheus-data:
  redis-data:

networks:
  default:
    name: trading-network
    external: true
