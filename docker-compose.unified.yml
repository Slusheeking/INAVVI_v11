version: '3.8'

services:
  trading-system:
    env_file: ./.env
    build:
      context: .
      dockerfile: Dockerfile.unified
    image: trading-system-unified:latest
    container_name: trading-system
    restart: unless-stopped
    ipc: host
    volumes:
      - .:/app/project
      - ./data:/app/data
      - ./models:/app/models
      - ./logs:/app/logs
      - ./prometheus:/etc/prometheus
      # Redis configuration
      - ./redis/redis.conf:/etc/redis/redis.conf
      - prometheus-data:/prometheus
      - redis-data:/data
      # Ensure Redis data directory exists
      - ./data/redis:/var/lib/redis
    ports:
      - "8888:8888"  # Jupyter Lab
      - "6381:6380"  # Redis (using 6381 on host to avoid conflicts)
      - "9090:9090"  # Prometheus
      - "9121:9121"  # Redis Exporter
      - "8000:8000"  # API server
      - "5000:5000"  # Frontend server
    environment:
      - PYTHONPATH=/app/project
      # API Keys
      - POLYGON_API_KEY=${POLYGON_API_KEY}
      - UNUSUAL_WHALES_API_KEY=${UNUSUAL_WHALES_API_KEY}
      - ALPACA_API_KEY=${ALPACA_API_KEY}
      - ALPACA_API_SECRET=${ALPACA_API_SECRET}
      - ALPACA_API_URL=${ALPACA_API_URL}
      # Redis configuration
      - REDIS_HOST=localhost
      - REDIS_PORT=6380
      - REDIS_DB=0
      - REDIS_PASSWORD=trading_system_2025
      - REDIS_TTL=3600
      - REDIS_USERNAME=default
      - REDIS_SSL=false
      - REDIS_TIMEOUT=5
      - REDIS_PUBSUB_THREADS=4
      - REDIS_NOTIFY_KEYSPACE_EVENTS=Kxe
      - REDIS_STOP_WRITES_ON_BGSAVE_ERROR=no
      - REDIS_DATA_DIR=/var/lib/redis
      - LOG_LEVEL=INFO
      # GPU acceleration and optimization for GH200
      - USE_GPU=true
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_TF32_OVERRIDE=1
      - CUDA_DEVICE_MAX_CONNECTIONS=32
      - TF_FORCE_UNIFIED_MEMORY=1
      - TF_ENABLE_NUMA_AWARE_ALLOCATORS=1
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      - TF_XLA_FLAGS=--tf_xla_auto_jit=2 --tf_xla_cpu_global_jit --tf_xla_enable_lazy_compilation=false
      - TF_CUDA_HOST_MEM_LIMIT_IN_MB=32000
      - TF_GPU_THREAD_MODE=gpu_private
      - TF_GPU_THREAD_COUNT=8
      - TF_GPU_ALLOCATOR=cuda_malloc_async
      - TF_USE_CUDA_GRAPHS=1
      - XLA_FLAGS=--xla_gpu_cuda_data_dir=/usr/local/cuda --xla_gpu_enable_fast_min_max=true
      - TF_CUDNN_USE_AUTOTUNE=1
      - CUPY_TF32=1
      - CUPY_CACHE_DIR=/app/data/cache/cupy
      # System path configuration
      - DATA_DIR=/app/data
      - MODELS_DIR=/app/models
      - LOGS_DIR=/app/logs
      - CONFIG_DIR=/app/config
      # Connection pool configuration
      - MAX_CONNECTIONS=50
      - MAX_POOL_SIZE=20
      - CONNECTION_TIMEOUT=10
      - MAX_RETRIES=3
      - RETRY_BACKOFF_FACTOR=0.5
      # Parallel processing configuration
      - MAX_WORKERS=10
      - BATCH_SIZE=256
      - QUEUE_SIZE=100
      # Alert configuration
      - ALERTS_ENABLED=true
      - FRONTEND_ALERTS_ENABLED=true
      - CONSOLE_ALERTS_ENABLED=true
      # Frontend configuration
      - FRONTEND_WEBSOCKET_ENABLED=true
      - FRONTEND_REALTIME_UPDATES=true
      - FRONTEND_REFRESH_INTERVAL=1000
      - FRONTEND_MAX_EVENTS=100
      - FRONTEND_NOTIFICATION_TIMEOUT=10000
      - FLASK_RUN_PORT=5000
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, utility, compute, video, graphics]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    ulimits:
      memlock: -1
      stack: 67108864
    stop_grace_period: 120s
    stop_signal: SIGTERM
    command: ["/app/startup.sh"]

volumes:
  prometheus-data:
  redis-data:

networks:
  default:
    name: trading-network
    external: true
