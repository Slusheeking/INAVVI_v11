# System Configuration

# Environment settings
environment:
  name: ${ENVIRONMENT}  # development, staging, production
  log_level: ${LOG_LEVEL}
  timezone: UTC

# System controller settings
system_controller:
  host: 0.0.0.0
  port: 8000
  workers: 4
  timeout: 30
  graceful_shutdown_timeout: 10
  health_check_interval: 60
  metrics_enabled: true

# Database settings
database:
  host: ${TIMESCALEDB_HOST}
  port: ${TIMESCALEDB_PORT}
  name: ${TIMESCALEDB_DATABASE}
  user: ${TIMESCALEDB_USER}
  password: ${TIMESCALEDB_PASSWORD}
  pool_size: 10
  max_overflow: 20
  pool_recycle: 3600
  pool_timeout: 30
  connect_timeout: 10
  application_name: autonomous_trading_system
  ssl_mode: prefer
  
  # TimescaleDB specific settings
  timescale:
    chunk_time_interval: 1 day
    compress_after: 7 days
    compression_job_schedule: 1 day
    retention_policy: 365 days

# Redis settings (for caching and pub/sub)
redis:
  host: redis
  port: 6379
  db: 0
  password: ${REDIS_PASSWORD}
  socket_timeout: 5
  socket_connect_timeout: 5
  retry_on_timeout: true
  health_check_interval: 30
  max_connections: 10

# Data acquisition settings
data_acquisition:
  host: 0.0.0.0
  port: 8001
  
  # Polygon.io settings
  polygon:
    api_key: ${POLYGON_API_KEY}
    websocket_buffer_size: ${POLYGON_WEBSOCKET_BUFFER_SIZE}
    websocket_use_compression: ${POLYGON_WEBSOCKET_USE_COMPRESSION}
    max_retries: 3
    retry_delay: 5
    rate_limit_per_minute: 200
    
    # Data collection settings
    collect:
      tickers:
        - AAPL
        - MSFT
        - GOOGL
        - AMZN
        - META
        - TSLA
        - NVDA
        - AMD
        - INTC
        - SPY
      timeframes:
        - 1m
        - 5m
        - 15m
        - 1h
        - 1d
  
  # Unusual Whales settings
  unusual_whales:
    api_key: ${UNUSUAL_WHALES_API_KEY}
    cache_results: ${UNUSUAL_WHALES_CACHE_RESULTS}
    cache_ttl_high_priority: ${UNUSUAL_WHALES_CACHE_TTL_HIGH_PRIORITY}
    cache_ttl_normal: ${UNUSUAL_WHALES_CACHE_TTL_NORMAL}
    max_retries: 3
    retry_delay: 5

# Trading strategy settings
trading_strategy:
  host: 0.0.0.0
  port: 8002
  
  # Alpaca settings
  alpaca:
    api_key: ${ALPACA_API_KEY}
    api_secret: ${ALPACA_API_SECRET}
    base_url: ${ALPACA_API_BASE_URL}
    data_feed: sip  # sip or iex
  
  # Risk management
  risk:
    max_position_size: ${MAX_POSITION_SIZE}
    risk_percentage: ${RISK_PERCENTAGE}
    max_positions: ${MAX_POSITIONS}
    max_position_value: ${MAX_POSITION_VALUE}
    max_daily_value: ${MAX_DAILY_VALUE}
    stop_loss_percentage: 0.02
    take_profit_percentage: 0.04
    trailing_stop: true
    trailing_stop_activation: 0.01
    trailing_stop_distance: 0.015
  
  # Trading hours
  trading_hours:
    enabled: true
    timezone: America/New_York
    start_time: 09:30
    end_time: 16:00
    pre_market_start: 04:00
    after_market_end: 20:00
    trade_pre_market: false
    trade_after_market: false
  
  # Trading days
  trading_days:
    enabled: true
    days:
      - Monday
      - Tuesday
      - Wednesday
      - Thursday
      - Friday
    exclude_holidays: true

# Model training settings
model_training:
  host: 0.0.0.0
  port: 8003
  
  # GPU settings
  gpu:
    enabled: ${GPU_ENABLED}
    visible_devices: ${NVIDIA_VISIBLE_DEVICES}
    memory_growth: true
    allow_memory_growth: true
    per_process_gpu_memory_fraction: 0.8
  
  # Model registry
  model_registry:
    path: ${MODEL_REGISTRY_PATH}
    checkpoint_path: ${MODEL_CHECKPOINT_PATH}
    serving_port: ${MODEL_SERVING_PORT}
    max_versions_per_model: 5

# Feature engineering settings
feature_engineering:
  host: 0.0.0.0
  port: 8004
  
  # Feature store
  feature_store:
    path: ${FEATURE_STORE_PATH}
    cache_enabled: ${FEATURE_CACHE_ENABLED}
    cache_ttl: ${FEATURE_CACHE_TTL}
    format: parquet
    compression: snappy

# Continuous learning settings
continuous_learning:
  host: 0.0.0.0
  port: 8005
  
  # Retraining
  retraining:
    interval_hours: 24
    performance_threshold: 0.05
    max_model_versions: 5
  
  # Backtesting
  backtesting:
    data_path: ${BACKTEST_DATA_PATH}
    results_path: ${BACKTEST_RESULTS_PATH}
    lookback_days: 30

# Monitoring and alerting
monitoring:
  prometheus:
    enabled: true
    port: 9090
  
  grafana:
    enabled: true
    port: 3000
  
  alerts:
    email:
      enabled: false
      smtp_server: smtp.example.com
      smtp_port: 587
      smtp_user: alerts@example.com
      smtp_password: ${SMTP_PASSWORD}
      from_address: alerts@example.com
      to_addresses:
        - admin@example.com
    
    slack:
      enabled: false
      webhook_url: ${SLACK_WEBHOOK_URL}
      channel: #trading-alerts
    
    pagerduty:
      enabled: false
      integration_key: ${PAGERDUTY_KEY}
      severity: critical