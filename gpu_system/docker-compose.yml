version: '3.8'

services:
  # Main TensorFlow GPU service

  tensorflow-gpu:
    build:
      context: .
      dockerfile: Dockerfile
    image: tensorflow-gh200-cuda123:latest
    container_name: tensorflow-gh200
    restart: unless-stopped
    volumes:
      # Mount your code and data directories
      - ../docker/tensorflow-gh200:/app/src
      - ..:/app/project
      - ../data:/app/data
      - ../models:/app/models
      - .:/app/tests
      - ./test_tensorflow_gpu.py:/app/test_tensorflow_gpu.py
      - ./test_tensorflow_gpu_direct.py:/app/test_tensorflow_gpu_direct.py
    ports:
      # For Jupyter Lab access
      - "8888:8888"
      # For TensorBoard
      - "6006:6006"
    environment:
      - PYTHONPATH=/app/project
      # GPU and CUDA configuration
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      - TF_XLA_FLAGS=--tf_xla_auto_jit=2 --tf_xla_cpu_global_jit
      - TF_CUDA_HOST_MEM_LIMIT_IN_MB=80000
      - TF_GPU_THREAD_MODE=gpu_private
      - TF_GPU_THREAD_COUNT=8
      - CUDA_DEVICE_MAX_CONNECTIONS=32
      - TF_GPU_ALLOCATOR=cuda_malloc_async
      - TF_USE_CUDA_GRAPHS=0
      - TF_LAYOUT_OPTIMIZER_DISABLE=1
      - TF_ENABLE_ONEDNN_OPTS=0
      - NVIDIA_TF32_OVERRIDE=1
      - TF_FORCE_UNIFIED_MEMORY=1
      - TF_ENABLE_NUMA_AWARE_ALLOCATORS=1
      - CUDA_AUTO_BOOST=1
      - NCCL_IB_DISABLE=0
      - NCCL_P2P_LEVEL=NVL
      - GOMP_CPU_AFFINITY=0-71
      - MALLOC_TRIM_THRESHOLD_=0
      - MALLOC_MMAP_THRESHOLD_=131072
      # API Keys
      - POLYGON_API_KEY=${POLYGON_API_KEY:-your_polygon_api_key}
      - UNUSUAL_WHALES_API_KEY=${UNUSUAL_WHALES_API_KEY:-your_unusual_whales_api_key}
      # Redis configuration
      - REDIS_HOST=redis-cache
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=trading_system_2025
      - REDIS_TTL=3600
      - REDIS_USERNAME=default
      - REDIS_SSL=false
      - REDIS_TIMEOUT=5
      - LOG_LEVEL=INFO
      # Connection pool configuration
      - MAX_CONNECTIONS=50
      - MAX_POOL_SIZE=20
      - CONNECTION_TIMEOUT=10
      - MAX_RETRIES=3
      - RETRY_BACKOFF_FACTOR=0.5
      # Parallel processing configuration
      - MAX_WORKERS=10
      - BATCH_SIZE=256
      - QUEUE_SIZE=100
    # Use NVIDIA runtime
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, utility, compute, graphics]
    command: >
      bash -c "cd /app/project && pip install python-dotenv redis && python /app/verify_tensorflow.py && jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''"
    networks:
      - trading-network

# Define networks to allow communication between separate docker-compose files
networks:
  trading-network:
    name: trading-network
    driver: bridge
    # This makes the network externally accessible to other docker-compose files
    external: true
