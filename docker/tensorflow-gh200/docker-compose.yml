version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis-cache
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  tensorflow-gpu:
    build:
      context: .
      dockerfile: Dockerfile
    image: tensorflow-gh200:latest
    container_name: tensorflow-gh200
    restart: unless-stopped
    volumes:
      # Mount your code and data directories
      - ../../src:/app/src
      - ../../data:/app/data
      - ../../models:/app/models
    ports:
      # For Jupyter Lab access
      - "8888:8888"
      # For TensorBoard
      - "6006:6006"
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - TF_FORCE_GPU_ALLOW_GROWTH=true
      # API Keys
      - POLYGON_API_KEY=wFvpCGZq4glxZU_LlRc2Qpw6tQGB5Fmf
      - UNUSUAL_WHALES_API_KEY=4ad71b9e-7ace-4f24-bdfc-532ace219a18
      # Redis configuration
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_TTL=3600
      # Connection pool configuration
      - MAX_CONNECTIONS=50
      - MAX_POOL_SIZE=20
      - CONNECTION_TIMEOUT=10
      - MAX_RETRIES=3
      - RETRY_BACKOFF_FACTOR=0.5
      # Parallel processing configuration
      - MAX_WORKERS=10
      - BATCH_SIZE=256
      - QUEUE_SIZE=100
    # Use NVIDIA runtime
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, utility, compute, graphics]
    depends_on:
      - redis
    command: >
      bash -c "jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''"

volumes:
  redis-data: